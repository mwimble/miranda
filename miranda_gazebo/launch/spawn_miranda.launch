<?xml version="1.0"?>
<launch>

  <arg name="do_amcl" default="true" />
  <arg name="do_map_server" default="true" />
  <arg name="map_file" default="$(find miranda_map)/maps/Snowberry.yaml"/>
  <arg name="robot_namespace" default="/"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="yaw" default="0.0"/>

  <arg name="laser_enabled" default="$(optenv MIRANDA_LIDAR_ENABLED true)"/>
  <arg name="euclid_enabled" default="$(optenv MIRANDA_EUCLID_ENABLED false)"/>
  <arg name="urdf_extras" default="$(optenv MIRANDA_URDF_EXTRAS)"/>

  <group ns="$(arg robot_namespace)">
    <!-- Note that miranda_description/description.launch is already included in miranda_control/control.launch. -->
    <group>
      <include file="$(find miranda_control)/launch/control.launch">
        <arg name="laser_enabled" value="$(arg laser_enabled)"/>
        <arg name="euclid_enabled" value="$(arg euclid_enabled)"/>
        <arg name="urdf_extras" value="$(arg urdf_extras)"/>
      </include>
    </group>

    <include if="$(arg do_map_server)" file="$(find miranda_map)/launch/map.launch" >
      <arg name="map_file" default="$(arg map_file)" />
    </include>

    <group if="$(arg euclid_enabled)">

      <!-- Include poincloud_to_laserscan if simulated euclid is attached -->
      <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">

          <remap from="cloud_in" to="camera/depth/points"/>
          <remap from="scan" to="scan"/>
          <rosparam>
              target_frame: base_link # Leave empty to output scan in the pointcloud frame
              tolerance: 1.0
              min_height: 0.05
              max_height: 1.0

              angle_min: -0.52 # -30.0*M_PI/180.0
              angle_max: 0.52 # 30.0*M_PI/180.0
              angle_increment: 0.005 # M_PI/360.0
              scan_time: 0.3333
              range_min: 0.45
              range_max: 4.0
              use_inf: true

              # Concurrency level, affects number of pointclouds queued for processing and number of threads used
              # 0 : Detect number of cores
              # 1 : Single threaded
              # 2->inf : Parallelism level
              concurrency_level: 1
          </rosparam>
      </node>

    </group>

    <node 
      if="$(arg do_amcl)"
      pkg="amcl" 
      type="amcl" 
      name="amcl" 
      output="screen" >

      <param name="base_frame_id" value="base_footprint" />
      <!-- param name="beam_skip_distance" value="0.5" /--> <!-- 0.0 .. 2.0 -->
      <!-- param name="beam_skip_threshold" value="0.3" /--><!-- 0.0 .. 1.0 -->
      <!-- param name="do_beamskip" value="false" /-->      <!-- true/false -->
      <!-- param name="first_map_only" value="false" /-->   <!-- true/false -->
      <param name="global_frame_id" value="map" />
      <param name="gui_publish_rate" value="10.0" />        <!-- -1.0 .. 1000.0 -->  <!-- VALUE IS 1.01 ##### -->
      <param name="kld_err" value="0.01" />                 <!-- 0.0 .. 1.0 -->
      <param name="kld_z" value="0.99" />                   <!-- 0.0 .. 1.0 -->
      <param name="laser_lambda_short" value="0.1" />       <!-- 0.0 .. 10.0 -->
      <param name="laser_likelihood_max_dist" value="5.0" /><!-- 0.0 .. 20.0 -->
      <param name="laser_max_beams" value="360" />          <!-- 0 .. 250 --> <!-- VALUE IS 250 ##### -->
      <param name="laser_max_range" value="5.0" />          <!-- -1.0 .. 1000.0 -->
      <param name="laser_min_range" value="0.08" />         <!-- -1.0 .. 1000.0 -->
      <param name="laser_model_type" value="likelihood_field" /> <!-- in beam, likelihood_field, likelihood_field_prob -->
      <!-- <param name="laser_model_type" value="beam"/--> 
      <param name="laser_sigma_hit" value="0.2" />          <!-- 0.0 .. 10.0 -->
      <param name="laser_z_hit" value="0.95" />             <!-- 0.0 .. 10.0 -->
      <param name="laser_z_max" value="0.05" />             <!-- 0.0 .. 10.0 -->
      <param name="laser_z_rand" value="0.05" />            <!-- 0.0 .. 10.0 --> <!-- VALUE IS 1.5 ##### -->
      <param name="laser_z_short" value="0.0" />            <!-- 0.0 .. 10.0 -->
      <param name="min_particles" value="500" />            <!-- 0 .. 1000 -->
      <param name="max_particles" value="1000" />           <!-- 0 .. 10000 -->
      <param name="odom_alpha1" value="0.8" />              <!-- 0.0 .. 10.0 -->
      <param name="odom_alpha2" value="0.8" />              <!-- 0.0 .. 10.0 -->
      <param name="odom_alpha3" value="0.2" />              <!-- 0.0 .. 10.0 -->
      <param name="odom_alpha4" value="0.2" />              <!-- 0.0 .. 10.0 -->
      <!--param name="odom_alpha5" value="0.2" /-->         <!-- 0.0 .. 10.0 -->
      <param name="odom_frame_id" value="odom" />
      <param name="odom_model_type" value="diff" />         <!-- in diff, diff-corrected, omni, omni-corrected -->
      <param name="resample_interval" value="2" />          <!-- 0 .. 20 -->
      <param name="recovery_alpha_fast" value="0.1" />      <!-- 0.0 .. 1.0 -->
      <param name="recovery_alpha_slow" value="0.001" />    <!-- 0.0 .. 0.5 -->
      <!-- param name="save_pose_rate" value="0.5" /-->     <!-- -1.0 .. 10.0 -->
      <!--param name="tf_broadcast" value="true" /-->       <!-- true/false -->
      <param name="transform_tolerance" value="0.5" />      <!-- 0.0 .. 2.0 -->
      <param name="update_min_a" value="0.1" />             <!-- 0.0 .. 6.28318530718 -->
      <param name="update_min_d" value="0.1" />             <!-- 0.0 .. 5.0 -->
      <param name="use_map_topic" value="true" />           <!-- true/false -->
    </node>

    <!-- Spawn robot in gazebo -->
    <node name="spawn_miranda_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg robot_namespace)" />

  </group>

</launch>
